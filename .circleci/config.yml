# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

executors:
  slds-executor:
    working_directory: ~/repo
    docker:
      - image: circleci/node:12-browsers
    resource_class: medium+
    # parallelism: 4

commands:
  vrt_set-env-vars:
    description: 'Set VRT/Applitools environment variables'
    steps:
      - run:
          name: 'Set environment variables'
          command: |
            echo 'export APPLITOOLS_BATCH_ID=${CIRCLE_SHA1}' >> $BASH_ENV
            echo 'export SLDS_PR_NUMBER=${CIRCLE_PULL_REQUEST##*/}' >> $BASH_ENV
            echo 'export APPLITOOLS_DONT_CLOSE_BATCHES="true"' >> $BASH_ENV
            echo 'export APPLITOOLS_BATCH_NOTIFY="true"' >> $BASH_ENV

  vrt_close-batch:
    description: 'Notify Applitools that tests have completed'
    steps:
      - run:
          name: 'Applitools: close batch'
          command: |
            echo 'set server="sfdceyesapi.applitools.com"'
            echo 'set apikey=$APPLITOOLS_API_KEY'
            echo 'set batchid=$APPLITOOLS_BATCH_ID'
            echo 'set url="https://$server/api/sessions/batches/$batchid/close/bypointerid/?apiKey=$apikey'
            echo 'curl --request DELETE --dump-header - $url'

  copy-dist:
    description: 'Copy .dist files from workspace'
    steps:
      - run:
          name: 'Copy .dist workspace files'
          command: 'cp -ar workspace/.dist .'

  copy-tokens:
    description: 'Copy design-tokens/dist from workspace'
    steps:
      - run:
          name: 'Copy design-tokens/dist workspace files'
          command: 'cp -ar workspace/design-tokens-dist design-tokens/dist'


jobs:
  build:
    executor: slds-executor

    steps:
      - checkout

      - run: mkdir -p workspace

      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}

      - run:
          name: npm-install
          command: 'npm install'

      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "package.json" }}

      - run:
          name: 'NPM run build'
          command: 'npm run build'

      - run:
          name: 'NPM run dist:simple'
          command: 'npm run dist:simple'

      - run:
          name: 'NPM run dist:write-ui'
          command: 'npm run gulp -- dist:write-ui'

      - run:
          name: 'Copy .dist to workspace'
          command: 'cp -ar .dist workspace'

      - run:
          name: 'Copy design-tokens/dist to workspace'
          command: 'cp -ar design-tokens/dist workspace/design-tokens-dist'

      # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job.
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: workspace
          # Must be relative path from root
          paths:
            - .dist
            - design-tokens-dist

  applitools:
    executor: slds-executor

    steps:
      - checkout

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: workspace

      - vrt_set-env-vars
      - copy-dist
      - copy-tokens

      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-

      # run Applitools tests!
      - run:
          name: Applitools
          command: 'npx eyes-storybook'

  applitools-mobile:
    executor: slds-executor

    steps:
      - checkout

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: workspace

      - vrt_set-env-vars
      - copy-dist
      - copy-tokens

      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-

      # run Applitools tests!
      - run:
          name: Applitools (mobile)
          command: 'STORYBOOK_STORIES_TYPE=mobile npx eyes-storybook --conf applitools.mobile.config.js'

  applitools-close-batch:
    executor: slds-executor

    steps:
      - vrt_close-batch

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - applitools:
          context: slds-api-keys
          requires:
            - build
      - applitools-mobile:
          context: slds-api-keys
          requires:
            - build
      - applitools-close-batch:
          context: slds-api-keys
          requires:
            - applitools
            - applitools-mobile
